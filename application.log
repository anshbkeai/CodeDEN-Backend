2025-04-15 00:15:06 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because "authheader" is null
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 00:16:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 00:16:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 00:16:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:16:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 00:16:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 00:17:08 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 22904 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 00:17:08 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 00:17:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 00:17:08 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 00:17:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 00:17:12 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 179 ms. Found 7 JPA repository interfaces.
2025-04-15 00:17:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 00:17:15 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 00:17:15 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 00:17:15 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 00:17:15 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7186 ms
2025-04-15 00:17:15 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 00:17:16 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 00:17:16 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 00:17:17 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 00:17:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 00:17:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36f657b7
2025-04-15 00:17:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 00:17:19 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 00:17:23 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 00:17:24 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:17:25 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 00:17:25 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 00:17:25 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 00:17:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 00:17:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 00:17:27 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 00:17:27 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 00:17:27 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 21.782 seconds (process running for 23.298)
2025-04-15 00:17:35 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-15 00:17:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-15 00:17:35 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-04-15 00:17:35 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:17:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:17:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:17:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:17:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:17:37 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.JwtService - 2b338c23-8fed-43a7-a5fd-d07ecad3c431
2025-04-15 00:17:38 [http-nio-8080-exec-2] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIyYjMzOGMyMy04ZmVkLTQzYTctYTVmZC1kMDdlY2FkM2M0MzEiLCJpYXQiOjE3NDQ2NTY0NTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjYzNjU3fQ.UHqQGXx2KIps5MSfBn31qUtzvD-UR1f46ep37fMIN2Q
2025-04-15 00:19:54 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 00:19:54 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 00:19:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:19:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 00:19:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 00:20:12 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 23355 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 00:20:12 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 00:20:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 00:20:12 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 00:20:14 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 00:20:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 7 JPA repository interfaces.
2025-04-15 00:20:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 00:20:16 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 00:20:16 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 00:20:16 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 00:20:16 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3882 ms
2025-04-15 00:20:16 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 00:20:16 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 00:20:17 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 00:20:17 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 00:20:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 00:20:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@74fc2d0e
2025-04-15 00:20:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 00:20:18 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 00:20:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 00:20:23 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:20:25 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 00:20:25 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 00:20:25 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 00:20:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 00:20:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 00:20:29 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 00:20:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 00:20:30 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 18.373 seconds (process running for 19.203)
2025-04-15 00:21:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-15 00:21:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-15 00:21:32 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-04-15 00:21:33 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:21:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:21:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:21:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:21:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:21:35 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.JwtService - 6b48fe53-9bb5-4f64-9337-4aca3ad86f27
2025-04-15 00:21:35 [http-nio-8080-exec-2] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YjQ4ZmU1My05YmI1LTRmNjQtOTMzNy00YWNhM2FkODZmMjciLCJpYXQiOjE3NDQ2NTY2OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjYzODk1fQ.C74SMmecn29X3YG0nP5Q9visvc-18pPziUDNdlHx2F0
2025-04-15 00:25:15 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 00:25:15 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 00:25:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:25:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 00:25:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 00:27:12 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 24461 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 00:27:12 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 00:27:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 00:27:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 00:27:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 00:27:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 338 ms. Found 7 JPA repository interfaces.
2025-04-15 00:27:19 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 00:27:19 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 00:27:19 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 00:27:19 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 00:27:19 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6880 ms
2025-04-15 00:27:20 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 00:27:20 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 00:27:20 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 00:27:20 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 00:27:20 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 00:27:21 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@33dff893
2025-04-15 00:27:21 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 00:27:22 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 00:27:24 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 00:27:25 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 00:27:26 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 00:27:26 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 00:27:26 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 00:27:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 00:27:26 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 00:27:28 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 00:27:28 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 00:27:28 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 17.17 seconds (process running for 18.662)
2025-04-15 00:28:51 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-15 00:28:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-15 00:28:51 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-04-15 00:28:53 [http-nio-8080-exec-2] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YjQ4ZmU1My05YmI1LTRmNjQtOTMzNy00YWNhM2FkODZmMjciLCJpYXQiOjE3NDQ2NTY2OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjYzODk1fQ.C74SMmecn29X3YG0nP5Q9visvc-18pPziUDNdlHx2F0
2025-04-15 00:28:53 [http-nio-8080-exec-2] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YjQ4ZmU1My05YmI1LTRmNjQtOTMzNy00YWNhM2FkODZmMjciLCJpYXQiOjE3NDQ2NTY2OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjYzODk1fQ.C74SMmecn29X3YG0nP5Q9visvc-18pPziUDNdlHx2F0
2025-04-15 00:29:08 [http-nio-8080-exec-5] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:29:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:29:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:29:09 [http-nio-8080-exec-5] INFO  c.l.leetcode.Service.JwtService - a1e8ebe9-b5aa-4157-bffb-180e00b3b066
2025-04-15 00:29:09 [http-nio-8080-exec-5] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMWU4ZWJlOS1iNWFhLTQxNTctYmZmYi0xODBlMDBiM2IwNjYiLCJpYXQiOjE3NDQ2NTcxNDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0MzQ5fQ.1uhZx-rT6NqcnllxxHbapVgdx3oh2GncM0cH53kjFE4
2025-04-15 00:35:13 [http-nio-8080-exec-5] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMWU4ZWJlOS1iNWFhLTQxNTctYmZmYi0xODBlMDBiM2IwNjYiLCJpYXQiOjE3NDQ2NTcxNDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0MzQ5fQ.1uhZx-rT6NqcnllxxHbapVgdx3oh2GncM0cH53kjFE4
2025-04-15 00:35:13 [http-nio-8080-exec-5] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhMWU4ZWJlOS1iNWFhLTQxNTctYmZmYi0xODBlMDBiM2IwNjYiLCJpYXQiOjE3NDQ2NTcxNDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0MzQ5fQ.1uhZx-rT6NqcnllxxHbapVgdx3oh2GncM0cH53kjFE4
2025-04-15 00:35:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:35:14 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 00:35:14 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 00:35:14 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 00:35:38 [http-nio-8080-exec-9] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:35:39 [http-nio-8080-exec-9] INFO  c.l.leetcode.Service.JwtService - 8d99f50d-dc5e-4ee8-b2c3-fe8b143fb5bc
2025-04-15 00:35:39 [http-nio-8080-exec-9] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:35:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:35:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:35:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:35:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:35:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:35:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:35:45 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:35:45 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:35:45 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:35:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:35:45 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:35:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:35:45 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:38:23 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:38:23 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZDk5ZjUwZC1kYzVlLTRlZTgtYjJjMy1mZThiMTQzZmI1YmMiLCJpYXQiOjE3NDQ2NTc1MzksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0NzM5fQ.vTa5lM50u0DmIKQ50UMihxsWC28hjlOBCXx6Cuqy3cw
2025-04-15 00:38:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:38:41 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:38:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:38:41 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.JwtService - a9072325-f249-4cea-8fcc-a882fd545b40
2025-04-15 00:38:41 [http-nio-8080-exec-10] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:38:44 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:38:44 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:38:44 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:38:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:44 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:38:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:38:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:38:50 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:38:50 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:38:50 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:38:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:38:50 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:38:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:38:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:43:00 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:43:00 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJhOTA3MjMyNS1mMjQ5LTRjZWEtOGZjYy1hODgyZmQ1NDViNDAiLCJpYXQiOjE3NDQ2NTc3MjEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY0OTIxfQ.-c2hLNwT4YE0Ay3irr1NyDoI1um_lwNgTH32-WUKJTE
2025-04-15 00:43:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:43:15 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:43:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:43:15 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.JwtService - e2f91a29-d92c-491f-a143-54b0050b973d
2025-04-15 00:43:15 [http-nio-8080-exec-1] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:43:16 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:43:16 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:43:16 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:43:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:16 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:43:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:43:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:43:19 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:43:19 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:43:19 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:43:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:43:19 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:43:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:43:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:57:00 [http-nio-8080-exec-9] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=tj@gmail.com, password=t@123)
2025-04-15 00:57:00 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:57:01 [http-nio-8080-exec-9] INFO  c.l.leetcode.Service.JwtService - 02c91a20-8771-4d57-9641-8f32b960109c
2025-04-15 00:57:01 [http-nio-8080-exec-9] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 00:57:19 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:57:19 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMmY5MWEyOS1kOTJjLTQ5MWYtYTE0My01NGIwMDUwYjk3M2QiLCJpYXQiOjE3NDQ2NTc5OTUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY1MTk1fQ.DPyJzpKzSypa7CEoGPhIL_GQ7xfj-OMxxEohjis2iSM
2025-04-15 00:57:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:57:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 00:57:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 00:57:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 00:57:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 00:57:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 00:57:42 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 00:57:44 [http-nio-8080-exec-5] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 00:57:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 00:57:45 [http-nio-8080-exec-5] INFO  c.l.leetcode.Service.JwtService - cae45eee-d92e-47c4-975b-e1103e031177
2025-04-15 00:57:45 [http-nio-8080-exec-5] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 00:57:46 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 00:57:46 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 00:57:46 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:46 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:57:46 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 00:57:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 00:57:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 00:57:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 00:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 00:57:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 00:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 00:57:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:00:53 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because "authheader" is null
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 01:02:47 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because "authheader" is null
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 01:03:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:03:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:03:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 01:03:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:03:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:03:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 01:03:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:03:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:03:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:03:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:03:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 01:03:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:03:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:03:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 01:03:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:03:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:04:11 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:04:11 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:04:11 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 01:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:04:11 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 01:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:04:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:11:52 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 01:11:53 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjYWU0NWVlZS1kOTJlLTQ3YzQtOTc1Yi1lMTEwM2UwMzExNzciLCJpYXQiOjE3NDQ2NTg4NjUsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2MDY1fQ.Snu_KNWroZ6DFMfUIu-V8yThGdxauGz4h4tPK-IqdFQ
2025-04-15 01:11:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:11:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 01:12:05 [http-nio-8080-exec-7] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 01:12:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:05 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 01:12:06 [http-nio-8080-exec-7] INFO  c.l.leetcode.Service.JwtService - 6ba5c8d6-9eb9-4108-8e24-9cda7a5f96f3
2025-04-15 01:12:06 [http-nio-8080-exec-7] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:12:06 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:12:06 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:12:06 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:12:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:06 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:12:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:12:06 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:12:06 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:12:06 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:12:06 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:12:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:12:06 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:12:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:12:06 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:13:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:13:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:13:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:13:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:13:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:13:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:13:12 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:13:12 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI2YmE1YzhkNi05ZWI5LTQxMDgtOGUyNC05Y2RhN2E1Zjk2ZjMiLCJpYXQiOjE3NDQ2NTk3MjYsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY2OTI2fQ.tsr-q2MW1z2u-Ly4wGRvVD2yk1bjtAFlnyRPsB-Jc68
2025-04-15 01:13:12 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:13:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:12 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:13:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:13:12 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:13:59 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:13:59 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:13:59 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 01:13:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:13:59 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 01:13:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:13:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:56:37 [http-nio-8080-exec-6] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 01:56:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 01:56:38 [http-nio-8080-exec-6] INFO  c.l.leetcode.Service.JwtService - ead44c00-a346-4671-9e92-d7ab2f240ecc
2025-04-15 01:56:38 [http-nio-8080-exec-6] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:56:39 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:56:39 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:56:39 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:56:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:39 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:56:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:56:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:56:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:56:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:56:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:56:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:56:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:56:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:56:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:58:35 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:58:35 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYWQ0NGMwMC1hMzQ2LTQ2NzEtOWU5Mi1kN2FiMmYyNDBlY2MiLCJpYXQiOjE3NDQ2NjIzOTgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NTk4fQ.bTMu8RsGQynI7cwy6eMjKXChkLFydfDXwt-zizq5k_c
2025-04-15 01:58:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 01:58:50 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 01:58:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 01:58:51 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.JwtService - 7f152ac3-f8f3-4d1c-ad19-6766f4450015
2025-04-15 01:58:51 [http-nio-8080-exec-4] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:58:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:58:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:58:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:58:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:58:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:58:52 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:58:53 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:58:53 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:58:53 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:58:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:58:53 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:58:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:58:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:59:32 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:59:32 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 01:59:32 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 01:59:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:32 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 01:59:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:59:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:59:35 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:35 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:35 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:59:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:35 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:59:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:59:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:59:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:59:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:59:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 01:59:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 01:59:38 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:38 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:38 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:59:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:38 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:59:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:59:38 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 01:59:38 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:38 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 01:59:38 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 01:59:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 01:59:38 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 01:59:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 01:59:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:00:09 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:09 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:09 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:00:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:09 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:00:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:00:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:00:10 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:10 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:10 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:00:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:10 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:00:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:00:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:00:11 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:11 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:11 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:00:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:11 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:00:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:00:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:00:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:00:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:11 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:00:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:00:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:00:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 02:00:59 [http-nio-8080-exec-10] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code herehi
hi, language=Java, Problem_id=P003)
2025-04-15 02:00:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 02:00:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:00:59 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 02:01:04 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:01:04 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:01:04 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 02:01:04 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:01:04 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 02:01:05 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:01:05 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:01:05 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 02:01:05 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:01:05 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 02:01:06 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:01:06 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:01:06 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 02:01:06 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:01:06 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 02:01:07 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:01:07 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:01:07 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 02:01:07 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:01:07 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 02:01:08 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:01:08 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 02:01:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 02:01:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:12:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:12:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:12:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:12:19 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:19 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:19 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:12:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:19 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:12:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:12:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:12:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:12:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:12:23 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:23 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:12:23 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:12:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:12:23 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:12:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:12:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:13:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:13:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:13:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:13:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:13:25 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:25 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:25 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:13:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:25 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:13:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:13:25 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:13:57 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:57 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:57 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:13:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:57 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:13:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:13:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:13:58 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:58 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:13:58 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:13:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:13:58 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:13:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:13:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:16:15 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:15 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:15 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:16:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:15 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:16:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:16:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:16:16 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:16 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:16 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:16:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:16 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:16:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:16:16 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:16:17 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:17 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:17 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:17 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:16:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:16:18 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:18 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:16:18 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:16:18 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:16:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:19:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:19:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:19:15 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:15 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:15 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:15 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:19:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:19:16 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:16 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:16 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:16 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:19:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:19:17 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:17 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:17 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:17 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:19:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:19:23 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:23 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:23 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:23 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:19:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:19:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:19:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:19:27 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:27 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:27 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:27 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:19:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:19:27 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:27 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:19:27 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:19:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:19:27 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:19:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:19:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:29:54 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:29:54 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3ZjE1MmFjMy1mOGYzLTRkMWMtYWQxOS02NzY2ZjQ0NTAwMTUiLCJpYXQiOjE3NDQ2NjI1MzEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjY5NzMxfQ.Ea7UjtgpYuWxl3wDTpdROp58pwHPed_nU8kl--RjK_Y
2025-04-15 02:29:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:29:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 02:29:57 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 02:29:57 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 02:29:58 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 02:30:09 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 02:30:09 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 02:30:10 [http-nio-8080-exec-2] INFO  c.l.leetcode.Service.JwtService - c4995df7-403d-4e42-a784-d7e552cb3bcc
2025-04-15 02:30:11 [http-nio-8080-exec-2] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:11 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:11 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:11 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:30:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:11 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:30:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:30:11 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:30:11 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:11 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:11 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:30:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:11 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:30:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:30:11 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:30:14 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:14 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:14 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:30:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:14 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:30:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:30:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:30:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:30:14 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:30:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:14 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:30:15 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:30:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:30:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:36:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 02:36:09 [http-nio-8080-exec-5] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code herehi
hi, language=Java, Problem_id=P003)
2025-04-15 02:36:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 02:36:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:36:09 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 02:36:14 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:36:14 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:36:14 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 02:36:14 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:36:14 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 02:36:15 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:36:15 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:36:15 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 02:36:15 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:36:15 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 02:36:16 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:36:16 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:36:16 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 02:36:16 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:36:16 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 02:36:17 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:36:17 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:36:17 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 02:36:17 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 02:36:17 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 02:36:19 [http-nio-8080-exec-5] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: reached end of file while parsing
hi
^
1 error

2025-04-15 02:36:19 [http-nio-8080-exec-5] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: reached end of file while parsing
hi
^
1 error false
2025-04-15 02:36:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 02:36:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 02:36:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:07 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:07 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:07 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:51:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:07 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:51:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:51:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:51:09 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:09 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:09 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:09 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:51:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:51:13 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:13 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:13 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:51:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:13 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:51:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:51:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:51:14 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:14 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjNDk5NWRmNy00MDNkLTRlNDItYTc4NC1kN2U1NTJjYjNiY2MiLCJpYXQiOjE3NDQ2NjQ0MTEsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjcxNjExfQ.ugoaqbuwysc3b4DACXVybzc03xEWjgRijiN1ZALb3xA
2025-04-15 02:51:14 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:51:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:51:14 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:51:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 02:51:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 02:56:42 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 02:56:42 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 02:56:42 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 02:56:42 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 02:56:42 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 02:56:42 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 02:57:28 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 02:57:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 02:57:30 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.JwtService - ea5dd79d-8561-47d2-83f4-bab411222b02
2025-04-15 02:57:30 [http-nio-8080-exec-3] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 02:57:30 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 02:57:30 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 02:57:30 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:57:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:30 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:57:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:57:30 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 02:57:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 02:57:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 02:57:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 02:57:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 02:57:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 02:57:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 02:57:31 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:00:37 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:00:37 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:00:37 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:00:37 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:00:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 03:00:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:00:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:00:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:00:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:00:38 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:00:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 03:06:11 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:06:11 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:06:11 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:06:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:06:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:06:11 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:06:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:06:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:06:12 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:06:12 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:06:12 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:06:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:06:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:06:12 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:06:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:06:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:11:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 03:11:31 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIwMmM5MWEyMC04NzcxLTRkNTctOTY0MS04ZjMyYjk2MDEwOWMiLCJpYXQiOjE3NDQ2NTg4MjEsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ2NjYwMjF9.iZuThXOGwLf7ned6WB8DSAprL4GyTDgHhKCs2kKklRg
2025-04-15 03:11:32 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:11:32 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:11:32 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:11:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:11:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:11:32 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:11:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:11:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:11:34 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired 870990 milliseconds ago at 2025-04-14T21:27:01.000Z. Current time: 2025-04-14T21:41:31.990Z. Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:682)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 03:12:50 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:12:50 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlYTVkZDc5ZC04NTYxLTQ3ZDItODNmNC1iYWI0MTEyMjJiMDIiLCJpYXQiOjE3NDQ2NjYwNTAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NjczMjUwfQ.i2YF8le7gu3405hS4hDNcdT23SJrzlq3FVkWNa0QTjg
2025-04-15 03:12:50 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:12:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:12:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:12:50 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:12:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:12:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:19:08 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 03:19:08 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 03:19:08 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 03:19:08 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 03:19:08 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 03:19:08 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 03:19:16 [http-nio-8080-exec-8] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 03:19:16 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 03:19:17 [http-nio-8080-exec-8] INFO  c.l.leetcode.Service.JwtService - 8ddc35bc-da6e-4618-9c6a-830c6544910d
2025-04-15 03:19:17 [http-nio-8080-exec-8] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:19:18 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:19:18 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:19:18 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:19:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:18 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:19:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:19:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:19:19 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:19:19 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:19:19 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:19:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:19:19 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:19:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:19:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:20:10 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:10 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:10 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:20:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:10 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:20:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:20:12 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:12 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:12 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:12 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:20:12 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:20:15 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:15 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:15 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:15 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:20:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:20:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZGRjMzViYy1kYTZlLTQ2MTgtOWM2YS04MzBjNjU0NDkxMGQiLCJpYXQiOjE3NDQ2NjczNTcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NTU3fQ.eImFHxw0t-tikak7sztqCLqPD31SgUUJqKYBFbQQp64
2025-04-15 03:20:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:20:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:20:18 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:20:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:20:18 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:21:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 03:21:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 03:21:22 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 03:21:22 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 03:21:22 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 03:21:22 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 03:21:30 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 03:21:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 03:21:32 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.JwtService - b2108d2f-7e06-4a2c-b266-e01ca5e94b8f
2025-04-15 03:21:32 [http-nio-8080-exec-10] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:33 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:33 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:33 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:33 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:21:33 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:21:34 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:34 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:34 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:34 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:21:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:21:40 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:40 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:40 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:40 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:21:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 03:21:47 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:47 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:47 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:47 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 03:21:58 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:58 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:58 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:58 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:21:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 03:21:58 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:58 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:21:58 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:21:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:21:58 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:21:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:21:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 03:24:35 [http-nio-8080-exec-9] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here
class ListNode {
    int val;
    ListNode next;
    ListNode(int x) { val = x; }
}

public class Main {
    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0), current = dummy;
        int carry = 0;
        while (l1 != null || l2 != null || carry != 0) {
            int sum = carry;
            if (l1 != null) { sum += l1.val; l1 = l1.next; }
            if (l2 != null) { sum += l2.val; l2 = l2.next; }
            carry = sum / 10;
            current.next = new ListNode(sum % 10);
            current = current.next;
        }
        return dummy.next;
    }

    // Helper to build list and print result
    public static void main(String[] args) {
        ListNode l1 = new ListNode(3);
        l1.next = new ListNode(4);
        l1.next.next = new ListNode(2); // 243

        ListNode l2 = new ListNode(4);
        l2.next = new ListNode(6);
        l2.next.next = new ListNode(5); // 564

        ListNode result = addTwoNumbers(l1, l2);
        while (result != null) {
            System.out.print(result.val);
            if (result.next != null) System.out.print(",");
            result = result.next;
        }
    }
}
, language=Java, Problem_id=P045)
2025-04-15 03:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:24:35 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P045
2025-04-15 03:24:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:24:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 03:24:36 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 3,3,2,4,3,5,6,4 Output 7,0,8
2025-04-15 03:24:36 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 03:24:36 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,3,2,4,3,5,6,4
2025-04-15 03:24:43 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:24:43 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 true
2025-04-15 03:24:43 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 2,0,0 Output 0
2025-04-15 03:24:43 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 03:24:43 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,0,0
2025-04-15 03:24:46 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:24:46 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 false
2025-04-15 03:24:46 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 03:24:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 03:24:47 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:25:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 03:25:40 [http-nio-8080-exec-8] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def addTwoNumbers(l1, l2):
    dummy = ListNode()
    current = dummy
    carry = 0
    while l1 or l2 or carry:
        s = carry
        if l1: s += l1.val; l1 = l1.next
        if l2: s += l2.val; l2 = l2.next
        carry = s // 10
        current.next = ListNode(s % 10)
        current = current.next
    return dummy.next

# Build linked list from list
def build(lst):
    head = ListNode(lst[0])
    current = head
    for num in lst[1:]:
        current.next = ListNode(num)
        current = current.next
    return head

# Print linked list
def printList(node):
    while node:
        print(node.val, end='' if not node.next else ',')
        node = node.next

# Example
l1 = build([3, 4, 2])  # 243
l2 = build([4, 6, 5])  # 564
result = addTwoNumbers(l1, l2)
printList(result)
, language=Python, Problem_id=P045)
2025-04-15 03:25:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P045
2025-04-15 03:25:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input 3,3,2,4,3,5,6,4 Output 7,0,8
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 03:25:40 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,3,2,4,3,5,6,4
2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 true
2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input 2,0,0 Output 0
2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,0,0
2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:25:41 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 false
2025-04-15 03:25:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 03:25:41 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 03:25:42 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiMjEwOGQyZi03ZTA2LTRhMmMtYjI2Ni1lMDFjYTVlOTRiOGYiLCJpYXQiOjE3NDQ2Njc0OTIsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0Njc0NjkyfQ.ehnpZcqy-s3T1e_cXW5_38k3ka4t4Dh4R6jee9kwjjU
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 03:27:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 03:27:10 [http-nio-8080-exec-1] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=#include <iostream>
using namespace std;

struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(nullptr) {}
};

ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode* dummy = new ListNode(0), *current = dummy;
    int carry = 0;
    while (l1 || l2 || carry) {
        int sum = carry;
        if (l1) { sum += l1->val; l1 = l1->next; }
        if (l2) { sum += l2->val; l2 = l2->next; }
        carry = sum / 10;
        current->next = new ListNode(sum % 10);
        current = current->next;
    }
    return dummy->next;
}

// Helper to print list
void printList(ListNode* node) {
    while (node) {
        cout << node->val;
        if (node->next) cout << ",";
        node = node->next;
    }
}

// Sample usage
int main() {
    ListNode* l1 = new ListNode(3);
    l1->next = new ListNode(4);
    l1->next->next = new ListNode(2); // 243

    ListNode* l2 = new ListNode(4);
    l2->next = new ListNode(6);
    l2->next->next = new ListNode(5); // 564

    ListNode* result = addTwoNumbers(l1, l2);
    printList(result);
    return 0;
}
, language=Cpp, Problem_id=P045)
2025-04-15 03:27:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P045
2025-04-15 03:27:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,3,2,4,3,5,6,4 Output 7,0,8
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 03:27:10 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,3,2,4,3,5,6,4
2025-04-15 03:27:16 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:27:16 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 true
2025-04-15 03:27:16 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 2,0,0 Output 0
2025-04-15 03:27:16 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 03:27:16 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,0,0
2025-04-15 03:27:17 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived7,0,8

2025-04-15 03:27:17 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  7,0,8 false
2025-04-15 03:27:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 03:27:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 03:27:17 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 03:47:17 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m24s458ms930µs509ns).
2025-04-15 04:01:58 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.NullPointerException: Cannot invoke "String.isEmpty()" because "authheader" is null
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:48)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                2025-04-15 13:46:04 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 7789 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 13:46:04 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 13:46:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 13:46:04 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 13:46:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 13:46:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 7 JPA repository interfaces.
2025-04-15 13:46:13 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 13:46:13 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 13:46:13 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 13:46:13 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 13:46:13 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8891 ms
2025-04-15 13:46:14 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 13:46:14 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 13:46:15 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 13:46:16 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 13:46:16 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 13:46:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68dfeda3
2025-04-15 13:46:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 13:46:19 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 13:46:22 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 13:46:22 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 13:46:24 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 13:46:24 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 13:46:24 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 13:46:24 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 13:46:24 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 13:46:26 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 13:46:26 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 13:46:26 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 25.08 seconds (process running for 27.442)
2025-04-15 13:51:05 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 13:51:05 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 13:51:05 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 13:51:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 13:51:05 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 13:51:13 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 8566 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 13:51:13 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 13:51:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 13:51:13 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 13:51:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 13:51:15 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 105 ms. Found 7 JPA repository interfaces.
2025-04-15 13:51:16 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 13:51:16 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 13:51:16 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 13:51:16 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 13:51:16 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2613 ms
2025-04-15 13:51:16 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 13:51:16 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 13:51:16 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 13:51:17 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 13:51:17 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 13:51:18 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4f62b630
2025-04-15 13:51:18 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 13:51:18 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 13:51:20 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 13:51:20 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 13:51:21 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 13:51:21 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 13:51:21 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 13:51:21 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 13:51:21 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 13:51:22 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 13:51:22 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 13:51:22 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 9.961 seconds (process running for 10.671)
2025-04-15 13:51:42 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 13:51:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 13:51:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 13:51:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 13:51:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 13:52:06 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 8812 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 13:52:06 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 13:52:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 13:52:06 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 13:52:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 13:52:07 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 108 ms. Found 7 JPA repository interfaces.
2025-04-15 13:52:08 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 13:52:08 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 13:52:08 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 13:52:09 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 13:52:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2571 ms
2025-04-15 13:52:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 13:52:09 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 13:52:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 13:52:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 13:52:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 13:52:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5aad8386
2025-04-15 13:52:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 13:52:10 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 13:52:12 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 13:52:12 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 13:52:13 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 13:52:13 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 13:52:13 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 13:52:13 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 13:52:13 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 13:52:14 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 13:52:14 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 13:52:14 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 9.305 seconds (process running for 9.967)
2025-04-15 13:56:33 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 36 class path changes (0 additions, 36 deletions, 0 modifications)
2025-04-15 13:57:29 [Thread-5] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 13:57:57 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 13:58:10 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:05:11 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 3541 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 14:05:11 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 14:05:11 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 14:05:11 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 14:05:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 14:05:17 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 7 JPA repository interfaces.
2025-04-15 14:05:20 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 14:05:20 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 14:05:20 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 14:05:20 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 14:05:20 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8739 ms
2025-04-15 14:05:20 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 14:05:21 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 14:05:21 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 14:05:25 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 14:05:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 14:05:38 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68dfeda3
2025-04-15 14:05:38 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 14:05:40 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 14:05:43 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 14:05:49 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:05:50 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 14:05:50 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 14:05:50 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 14:05:50 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 14:05:50 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 14:05:51 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 14:05:52 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 14:05:52 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 42.045 seconds (process running for 46.382)
2025-04-15 14:10:08 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-04-15 14:10:08 [Thread-5] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 14:10:08 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 14:10:08 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:10:08 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 14:10:08 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-15 14:10:08 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 3541 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 14:10:08 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 14:10:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 14:10:08 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 7 JPA repository interfaces.
2025-04-15 14:10:09 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 14:10:09 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 14:10:09 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 14:10:09 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 14:10:09 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 859 ms
2025-04-15 14:10:09 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 14:10:09 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 14:10:09 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 14:10:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-04-15 14:10:09 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2b969b9b
2025-04-15 14:10:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-04-15 14:10:09 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-2)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 14:10:10 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 14:10:10 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:10:10 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 14:10:10 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 14:10:10 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 14:10:10 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 14:10:10 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 14:10:11 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 14:10:11 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 14:10:11 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 2.684 seconds (process running for 305.428)
2025-04-15 14:10:11 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-04-15 14:13:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-15 14:13:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-15 14:13:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-04-15 14:15:41 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:15:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:42 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:15:43 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.JwtService - b84d1d23-3fb0-4916-8620-e9b8257feeb5
2025-04-15 14:15:43 [http-nio-8080-exec-3] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:15:45 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:15:45 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:15:45 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:15:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:45 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:15:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:15:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:15:48 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:15:48 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:15:48 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:15:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:15:48 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:15:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:15:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:16:40 [http-nio-8080-exec-2] INFO  o.a.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name [0x160x030x010x060xc00x010x000x060xbc0x030x030x0f0xc80x170xcc0xe60xce0xf50xbf0xe50xdb0xcai0xc40xb2(0x020xff0x9f0x830x89a0x830xdd0x8f0xc50x94c:_f0xbb4 ]. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:406) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
2025-04-15 14:16:40 [http-nio-8080-exec-1] INFO  o.a.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in method name [0x160x030x010x060xa00x010x000x060x9c0x030x03m0x0c0xca0xbev9N40xf40xfe0xb90xf4-0xa70xfbM0x150xa50xec0x040x170xd8*s;0xbc0x000xe20xfc0x9d)0xe7 ]. HTTP method names must be tokens
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:406) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:270) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
2025-04-15 14:17:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:17:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:17:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:17:24 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:17:24 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:18:09 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:18:09 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:18:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:18:09 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:18:28 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:18:28 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJiODRkMWQyMy0zZmIwLTQ5MTYtODYyMC1lOWI4MjU3ZmVlYjUiLCJpYXQiOjE3NDQ3MDY3NDMsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzEzOTQzfQ.7x3VrgTrN-uIIt4C0hv2f4JF8Sdc74wHaHPDoZNKZk8
2025-04-15 14:18:28 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:18:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:18:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:18:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:18:52 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:18:52 [http-nio-8080-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821) ~[jjwt-impl-0.12.5.jar:0.12.5]
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70) ~[classes/:na]
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53) ~[classes/:na]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243) ~[spring-webmvc-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238) ~[spring-security-config-6.4.2.jar:6.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.2.2.jar:6.2.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.2.2.jar:6.2.2]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.34.jar:10.1.34]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
2025-04-15 14:19:08 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:19:08 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:19:09 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.JwtService - 99eb132b-955a-42bc-92cf-e04bbc4ad3c1
2025-04-15 14:19:09 [http-nio-8080-exec-1] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5OWViMTMyYi05NTVhLTQyYmMtOTJjZi1lMDRiYmM0YWQzYzEiLCJpYXQiOjE3NDQ3MDY5NDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTQ5fQ.T-ncQ7jpISZx7ZMT8WDHCxbtHqqQ0W0jl74gSbuU0oc
2025-04-15 14:19:27 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:19:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:19:28 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.JwtService - cfc2d6fe-46d3-4bb5-abb7-7d0660694e30
2025-04-15 14:19:28 [http-nio-8080-exec-4] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjZmMyZDZmZS00NmQzLTRiYjUtYWJiNy03ZDA2NjA2OTRlMzAiLCJpYXQiOjE3NDQ3MDY5NjgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTY4fQ.bvwZySSPwR7dpDXWtkBmQmd0BGtgJ44MFwauqPZaUXE
2025-04-15 14:19:33 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5OWViMTMyYi05NTVhLTQyYmMtOTJjZi1lMDRiYmM0YWQzYzEiLCJpYXQiOjE3NDQ3MDY5NDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTQ5fQ.T-ncQ7jpISZx7ZMT8WDHCxbtHqqQ0W0jl74gSbuU0oc
2025-04-15 14:19:33 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5OWViMTMyYi05NTVhLTQyYmMtOTJjZi1lMDRiYmM0YWQzYzEiLCJpYXQiOjE3NDQ3MDY5NDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTQ5fQ.T-ncQ7jpISZx7ZMT8WDHCxbtHqqQ0W0jl74gSbuU0oc
2025-04-15 14:19:33 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:19:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:33 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5OWViMTMyYi05NTVhLTQyYmMtOTJjZi1lMDRiYmM0YWQzYzEiLCJpYXQiOjE3NDQ3MDY5NDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTQ5fQ.T-ncQ7jpISZx7ZMT8WDHCxbtHqqQ0W0jl74gSbuU0oc
2025-04-15 14:19:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI5OWViMTMyYi05NTVhLTQyYmMtOTJjZi1lMDRiYmM0YWQzYzEiLCJpYXQiOjE3NDQ3MDY5NDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTQ5fQ.T-ncQ7jpISZx7ZMT8WDHCxbtHqqQ0W0jl74gSbuU0oc
2025-04-15 14:19:47 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:19:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:20:02 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjZmMyZDZmZS00NmQzLTRiYjUtYWJiNy03ZDA2NjA2OTRlMzAiLCJpYXQiOjE3NDQ3MDY5NjgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTY4fQ.bvwZySSPwR7dpDXWtkBmQmd0BGtgJ44MFwauqPZaUXE
2025-04-15 14:20:02 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJjZmMyZDZmZS00NmQzLTRiYjUtYWJiNy03ZDA2NjA2OTRlMzAiLCJpYXQiOjE3NDQ3MDY5NjgsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0MTY4fQ.bvwZySSPwR7dpDXWtkBmQmd0BGtgJ44MFwauqPZaUXE
2025-04-15 14:20:02 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:20:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:20:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:20:02 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:20:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:20:02 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:21:17 [http-nio-8080-exec-6] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=tj@gmail.com, password=t@123)
2025-04-15 14:21:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:17 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:21:18 [http-nio-8080-exec-6] INFO  c.l.leetcode.Service.JwtService - 47909e19-ab40-4538-9bd1-5e705b0a4c9f
2025-04-15 14:21:18 [http-nio-8080-exec-6] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:19 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:19 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:19 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:21:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:19 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:21:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:21:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:21:19 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:19 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:19 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:21:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:19 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:21:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:21:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:21:26 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:26 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:26 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:21:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:26 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:26 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:21:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:21:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:21:28 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:28 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:21:28 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:21:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:21:28 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:21:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:21:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:23:19 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:23:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:23:19 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.JwtService - 8b861e67-b4ad-4376-b6ba-ba6da901fef4
2025-04-15 14:23:19 [http-nio-8080-exec-1] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:20 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:20 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:20 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:23:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:20 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:23:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:23:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:23:20 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:20 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:20 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:23:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:20 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:23:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:23:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:23:22 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:22 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:22 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:23:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:22 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:23:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:23:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:23:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:23:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:23:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:22 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:23:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:23:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:23:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:23:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:23:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:23:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:23:46 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:46 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:46 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:23:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:46 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:23:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:23:46 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:23:48 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:48 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:23:48 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:23:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:23:48 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:23:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:23:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:24:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:24:08 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:08 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:08 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:08 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:24:08 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:24:30 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:30 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:30 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:30 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:24:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:36 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:24:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:24:36 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:36 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:36 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:36 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:24:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:24:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:24:39 [http-nio-8080-exec-9] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=
// Your code here
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

void rotate(vector<int>& nums, int k) {
    int n = nums.size();
    k = k % n;  // handle k >= n
    reverse(nums.begin(), nums.end());
    reverse(nums.begin(), nums.begin() + k);
    reverse(nums.begin() + k, nums.end());
}

int main() {
    // Test Case 1
    vector<int> arr1 = {1,2,3,4,5,6,7};
    int k1 = 3;
    rotate(arr1, k1);
    for (int num : arr1) cout << num << " ";
    cout << endl;

    // Test Case 2
    vector<int> arr2 = {1,2};
    int k2 = 1;
    rotate(arr2, k2);
    for (int num : arr2) cout << num << " ";
    cout << endl;

    return 0;
}
, language=Cpp, Problem_id=P003)
2025-04-15 14:24:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:39 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:24:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:24:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:24:40 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:24:40 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:24:40 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:24:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:41 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:24:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:24:42 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:42 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:42 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:42 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:24:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:24:50 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  TLE ERROR false
2025-04-15 14:24:50 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:24:50 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:24:50 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:24:55 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:55 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:55 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:55 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:24:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:24:55 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:55 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:24:55 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:24:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:24:55 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:24:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:24:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:24:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived/bin/sh: 1: ./Main: Text file busy

2025-04-15 14:24:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  /bin/sh: 1: ./Main: Text file busy false
2025-04-15 14:24:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:24:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:24:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:24:57 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived5 6 7 1 2 3 4 
2 1 

2025-04-15 14:24:57 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  5 6 7 1 2 3 4 
2 1 false
2025-04-15 14:24:57 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:24:57 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:24:57 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:24:58 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived5 6 7 1 2 3 4 
2 1 

2025-04-15 14:24:58 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  5 6 7 1 2 3 4 
2 1 false
2025-04-15 14:24:58 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:24:58 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:24:58 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:24:59 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived5 6 7 1 2 3 4 
2 1 

2025-04-15 14:24:59 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  5 6 7 1 2 3 4 
2 1 false
2025-04-15 14:24:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:25:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:25:03 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:27:22 [http-nio-8080-exec-7] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=def rotate(nums, k):
    n = len(nums)
    k %= n  # handle k >= n

    # Helper to reverse a portion of the list in-place
    def reverse(start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1

    reverse(0, n - 1)
    reverse(0, k - 1)
    reverse(k, n - 1)

# Test Case 1
arr1 = [1, 2, 3, 4, 5, 6, 7]
rotate(arr1, 3)
print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]

# Test Case 2
arr2 = [1, 2]
rotate(arr2, 1)
print(arr2)  # Output: [2, 1]
, language=Cpp, Problem_id=P003)
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~

2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~ false
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~

2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~ false
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~

2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~ false
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~

2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~ false
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Main.cpp Save  Succesfully  
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~

2025-04-15 14:27:22 [http-nio-8080-exec-7] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.cpp:3:13: error: stray ‘#’ in program
    3 |     k %= n  # handle k >= n
      |             ^
Main.cpp:5:7: error: invalid preprocessing directive #Helper
    5 |     # Helper to reverse a portion of the list in-place
      |       ^~~~~~
Main.cpp:16:3: error: invalid preprocessing directive #Test
   16 | # Test Case 1
      |   ^~~~
Main.cpp:19:14: error: stray ‘#’ in program
   19 | print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]
      |              ^
Main.cpp:21:3: error: invalid preprocessing directive #Test
   21 | # Test Case 2
      |   ^~~~
Main.cpp:24:14: error: stray ‘#’ in program
   24 | print(arr2)  # Output: [2, 1]
      |              ^
Main.cpp:1:1: error: ‘def’ does not name a type
    1 | def rotate(nums, k):
      | ^~~ false
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:27:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:28:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  tj@gmail.com
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - tj@gmail.com
2025-04-15 14:28:00 [http-nio-8080-exec-8] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here

import  java.util.*;
public class  Main {
   public static String reverseString(String str) {
        StringBuilder reversed = new StringBuilder(str);
        return reversed.reverse().toString();
    }
  public static  void main(String agrs) {
    Scanner sc =  new Scanner(System.in);
    String  str =  sc.next();
    System.out.println(reverseString(str));

  }
}, language=Java, Problem_id=P011)
2025-04-15 14:28:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P011
2025-04-15 14:28:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input OpenAI Output IAnepO
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:28:00 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd OpenAI
2025-04-15 14:28:10 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  TLE ERROR false
2025-04-15 14:28:10 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input a Output a
2025-04-15 14:28:10 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:28:10 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd a
2025-04-15 14:28:12 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:28:12 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:28:12 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input data science Output ecneics atad
2025-04-15 14:28:12 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:28:12 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd data science
2025-04-15 14:28:14 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:28:14 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:28:14 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input 1234!@#$ Output $#@!4321
2025-04-15 14:28:14 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:28:14 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1234!@#$
2025-04-15 14:28:16 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:28:16 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:28:16 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input hello Output olleh
2025-04-15 14:28:16 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:28:16 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd hello
2025-04-15 14:28:18 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:28:18 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:28:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:28:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:28:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:28:21 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 35 class path changes (0 additions, 35 deletions, 0 modifications)
2025-04-15 14:28:21 [Thread-7] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 14:28:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 14:28:21 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:28:21 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-04-15 14:28:24 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-04-15 14:29:04 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 3541 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 14:29:04 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 14:29:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 14:29:04 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 30 ms. Found 7 JPA repository interfaces.
2025-04-15 14:29:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 14:29:04 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 505 ms
2025-04-15 14:29:04 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 14:29:04 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 14:29:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 14:29:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-04-15 14:29:09 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2614693d
2025-04-15 14:29:09 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-04-15 14:29:09 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-3)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 14:29:10 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 14:29:14 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:29:14 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 14:29:14 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 14:29:14 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 14:29:14 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 14:29:14 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 14:29:15 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 14:29:15 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 14:29:15 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 11.015 seconds (process running for 1449.612)
2025-04-15 14:29:15 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 14:29:15 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-04-15 14:29:15 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 14:29:15 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:29:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-04-15 14:29:15 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-04-15 14:29:33 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Starting LeetcodeApplication using Java 21.0.6 with PID 19049 (/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/target/classes started by ansh in /home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode)
2025-04-15 14:29:33 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-15 14:29:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-04-15 14:29:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-04-15 14:29:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-15 14:29:38 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 7 JPA repository interfaces.
2025-04-15 14:29:40 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-04-15 14:29:40 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-15 14:29:40 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-04-15 14:29:41 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-15 14:29:41 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6942 ms
2025-04-15 14:29:41 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-15 14:29:42 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.5.Final
2025-04-15 14:29:42 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-15 14:29:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-15 14:29:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-15 14:29:45 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@669b04e4
2025-04-15 14:29:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-15 14:29:46 [restartedMain] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0.41
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-15 14:29:51 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-15 14:29:51 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 14:29:54 [restartedMain] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name daoAuthenticationProvider
2025-04-15 14:29:54 [restartedMain] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-15 14:29:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-15 14:29:56 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TestCasesRepositry; Use @RepositoryRestResource instead
2025-04-15 14:29:56 [restartedMain] WARN  o.s.d.r.c.m.RepositoryCollectionResourceMapping - @RestResource detected to customize the repository resource for com.leetcode.leetcode.Repositry.TagRepositry; Use @RepositoryRestResource instead
2025-04-15 14:29:58 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-04-15 14:29:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-04-15 14:29:58 [restartedMain] INFO  c.l.leetcode.LeetcodeApplication - Started LeetcodeApplication in 27.011 seconds (process running for 28.867)
2025-04-15 14:30:28 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-15 14:30:28 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-15 14:30:28 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-15 14:30:29 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:30:29 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:30:30 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.verifySignature(DefaultJwtParser.java:340)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:577)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:30:50 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:30:50 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI0NzkwOWUxOS1hYjQwLTQ1MzgtOWJkMS01ZTcwNWIwYTRjOWYiLCJpYXQiOjE3NDQ3MDcwNzgsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQyNzh9.3NjKQ3HVc7xCnQJ_Fd1wJ-ZaRLagO2Sw7I2PnymHeG0
2025-04-15 14:30:50 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:30:50 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:30:50 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:30:58 [http-nio-8080-exec-8] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=tj@gmail.com, password=t@123)
2025-04-15 14:30:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:30:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:30:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:30:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:31:00 [http-nio-8080-exec-8] INFO  c.l.leetcode.Service.JwtService - d8b8a320-ef70-4dad-9454-97484ed5cd22
2025-04-15 14:31:00 [http-nio-8080-exec-8] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:00 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:00 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:00 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:00 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:00 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:31:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:31:01 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:01 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:01 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:01 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:31:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:31:12 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:12 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:12 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:12 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:31:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:31:12 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:12 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:12 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:12 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:31:12 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  tj@gmail.com
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.Rest_Controller.Submit_Route - tj@gmail.com
2025-04-15 14:31:18 [http-nio-8080-exec-8] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here

import  java.util.*;
public class  Main {
   public static String reverseString(String str) {
        StringBuilder reversed = new StringBuilder(str);
        return reversed.reverse().toString();
    }
  public static  void main(String agrs) {
    Scanner sc =  new Scanner(System.in);
    String  str =  sc.next();
    System.out.println(reverseString(str));

  }
}, language=Java, Problem_id=P011)
2025-04-15 14:31:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:18 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P011
2025-04-15 14:31:18 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:31:19 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:31:19 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input OpenAI Output IAnepO
2025-04-15 14:31:19 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:19 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd OpenAI
2025-04-15 14:31:20 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:31:20 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:31:20 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input a Output a
2025-04-15 14:31:20 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:20 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd a
2025-04-15 14:31:22 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:31:22 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:31:22 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input data science Output ecneics atad
2025-04-15 14:31:22 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:22 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd data science
2025-04-15 14:31:24 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:31:24 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:31:24 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input 1234!@#$ Output $#@!4321
2025-04-15 14:31:24 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:24 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1234!@#$
2025-04-15 14:31:26 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:31:26 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:31:26 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Input hello Output olleh
2025-04-15 14:31:26 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:26 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd hello
2025-04-15 14:31:28 [http-nio-8080-exec-8] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedError: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application

2025-04-15 14:31:28 [http-nio-8080-exec-8] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Error: Main method not found in class Main, please define the main method as:
   public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application false
2025-04-15 14:31:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:31:28 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:31:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:31:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  tj@gmail.com
2025-04-15 14:31:48 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.Submit_Route - tj@gmail.com
2025-04-15 14:31:48 [http-nio-8080-exec-10] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here

import  java.util.*;
public class  Main {
   public static String reverseString(String str) {
        StringBuilder reversed = new StringBuilder(str);
        return reversed.reverse().toString();
    }
  public static  void main(String args[]) {
    Scanner sc =  new Scanner(System.in);
    String  str =  sc.next();
    System.out.println(reverseString(str));

  }
}, language=Java, Problem_id=P011)
2025-04-15 14:31:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:31:49 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P011
2025-04-15 14:31:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:31:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:31:49 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input OpenAI Output IAnepO
2025-04-15 14:31:49 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:49 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd OpenAI
2025-04-15 14:31:50 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedIAnepO

2025-04-15 14:31:50 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  IAnepO true
2025-04-15 14:31:50 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input a Output a
2025-04-15 14:31:50 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:50 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd a
2025-04-15 14:31:52 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  reciveda

2025-04-15 14:31:52 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  a true
2025-04-15 14:31:52 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input data science Output ecneics atad
2025-04-15 14:31:52 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:52 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd data science
2025-04-15 14:31:53 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedatad

2025-04-15 14:31:53 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  atad false
2025-04-15 14:31:53 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input 1234!@#$ Output $#@!4321
2025-04-15 14:31:53 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:53 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1234!@#$
2025-04-15 14:31:55 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived$#@!4321

2025-04-15 14:31:55 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  $#@!4321 true
2025-04-15 14:31:55 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Input hello Output olleh
2025-04-15 14:31:55 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:31:55 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd hello
2025-04-15 14:31:57 [http-nio-8080-exec-10] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedolleh

2025-04-15 14:31:57 [http-nio-8080-exec-10] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  olleh true
2025-04-15 14:31:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:31:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:31:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:33:00 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:00 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:00 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.verifySignature(DefaultJwtParser.java:340)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:577)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:33:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:04 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:04 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.verifySignature(DefaultJwtParser.java:340)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:577)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:33:10 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:10 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:10 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.verifySignature(DefaultJwtParser.java:340)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:577)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:33:11 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:11 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:11 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.security.SignatureException: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
	at io.jsonwebtoken.impl.DefaultJwtParser.verifySignature(DefaultJwtParser.java:340)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:577)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:33:13 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:13 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4Yjg2MWU2Ny1iNGFkLTQzNzYtYjZiYS1iYTZkYTkwMWZlZjQiLCJpYXQiOjE3NDQ3MDcxOTksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE0Mzk5fQ.Z-vA7guIZal6ZWJMxiYCCcCfjuarzl2nZ2uZxPkzVNQ
2025-04-15 14:33:13 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:33:13 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:33:13 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJkOGI4YTMyMC1lZjcwLTRkYWQtOTQ1NC05NzQ4NGVkNWNkMjIiLCJpYXQiOjE3NDQ3MDc2NjAsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTQ4NjB9.AkcJW44icd2Sg0mFzlE-02UjqnJ3BqYhf4109h_EZIg
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:34:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  tj@gmail.com
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - tj@gmail.com
2025-04-15 14:34:27 [http-nio-8080-exec-9] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here

import  java.util.*;
public class  Main {
   public static String reverseString(String str) {
        StringBuilder reversed = new StringBuilder(str);
        return reversed.reverse().toString();
    }
  public static  void main(String args[]) {
    Scanner sc =  new Scanner(System.in);
    String  str =  sc.next();
    System.out.println(reverseString(str));

  }
}, language=Java, Problem_id=P011)
2025-04-15 14:34:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P011
2025-04-15 14:34:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:34:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input OpenAI Output IAnepO
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:34:27 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd OpenAI
2025-04-15 14:34:29 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedIAnepO

2025-04-15 14:34:29 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  IAnepO true
2025-04-15 14:34:29 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input a Output a
2025-04-15 14:34:29 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:34:29 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd a
2025-04-15 14:34:31 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  reciveda

2025-04-15 14:34:31 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  a true
2025-04-15 14:34:31 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 1234!@#$ Output $#@!4321
2025-04-15 14:34:31 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:34:31 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1234!@#$
2025-04-15 14:34:32 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived$#@!4321

2025-04-15 14:34:32 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  $#@!4321 true
2025-04-15 14:34:32 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input hello Output olleh
2025-04-15 14:34:32 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:34:32 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd hello
2025-04-15 14:34:34 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedolleh

2025-04-15 14:34:34 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  olleh true
2025-04-15 14:34:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:34:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:34:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:39 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:34:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:34:40 [http-nio-8080-exec-1] INFO  c.l.leetcode.Service.JwtService - e0ffefa9-8015-4d71-8038-a5d188765b4a
2025-04-15 14:34:40 [http-nio-8080-exec-1] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:40 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:40 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:40 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:34:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:34:40 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:40 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:40 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:34:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:40 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:34:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:34:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:34:44 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:44 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:44 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:34:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:44 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:34:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:34:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:34:44 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:44 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:44 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:34:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:44 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:34:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:34:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:34:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:34:48 [http-nio-8080-exec-1] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code heredef rotate(nums, k):
    n = len(nums)
    k %= n  # handle k >= n

    # Helper to reverse a portion of the list in-place
    def reverse(start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1

    reverse(0, n - 1)
    reverse(0, k - 1)
    reverse(k, n - 1)

# Test Case 1
arr1 = [1, 2, 3, 4, 5, 6, 7]
rotate(arr1, 3)
print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]

# Test Case 2
arr2 = [1, 2]
rotate(arr2, 1)
print(arr2)  # Output: [2, 1]
, language=Python, Problem_id=P003)
2025-04-15 14:34:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:34:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:34:48 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax

2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax

2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax

2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:34:51 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax

2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax

2025-04-15 14:34:52 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code heredef rotate(nums, k):
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:34:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:34:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:34:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:35:22 [http-nio-8080-exec-3] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here
def rotate(nums, k):
    n = len(nums)
    k %= n  # handle k >= n

    # Helper to reverse a portion of the list in-place
    def reverse(start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1

    reverse(0, n - 1)
    reverse(0, k - 1)
    reverse(k, n - 1)

# Test Case 1
arr1 = [1, 2, 3, 4, 5, 6, 7]
rotate(arr1, 3)
print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]

# Test Case 2
arr2 = [1, 2]
rotate(arr2, 1)
print(arr2)  # Output: [2, 1]
, language=Python, Problem_id=P003)
2025-04-15 14:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:22 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:35:23 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:35:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:35:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:35:24 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:35:55 [http-nio-8080-exec-9] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=#  Your code here
def rotate(nums, k):
    n = len(nums)
    k %= n  # handle k >= n

    # Helper to reverse a portion of the list in-place
    def reverse(start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1

    reverse(0, n - 1)
    reverse(0, k - 1)
    reverse(k, n - 1)

# Test Case 1
arr1 = [1, 2, 3, 4, 5, 6, 7]
rotate(arr1, 3)
print(arr1)  # Output: [5, 6, 7, 1, 2, 3, 4]

# Test Case 2
arr2 = [1, 2]
rotate(arr2, 1)
print(arr2)  # Output: [2, 1]
, language=Python, Problem_id=P003)
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived[5, 6, 7, 1, 2, 3, 4]
[2, 1]

2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  [5, 6, 7, 1, 2, 3, 4]
[2, 1] false
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived[5, 6, 7, 1, 2, 3, 4]
[2, 1]

2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  [5, 6, 7, 1, 2, 3, 4]
[2, 1] false
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived[5, 6, 7, 1, 2, 3, 4]
[2, 1]

2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  [5, 6, 7, 1, 2, 3, 4]
[2, 1] false
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived[5, 6, 7, 1, 2, 3, 4]
[2, 1]

2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  [5, 6, 7, 1, 2, 3, 4]
[2, 1] false
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived[5, 6, 7, 1, 2, 3, 4]
[2, 1]

2025-04-15 14:35:55 [http-nio-8080-exec-9] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  [5, 6, 7, 1, 2, 3, 4]
[2, 1] false
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:35:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:35:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:36:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:36:46 [http-nio-8080-exec-1] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=def rotate(nums, k):
    n = len(nums)
    k %= n

    def reverse(start, end):
        while start < end:
            nums[start], nums[end] = nums[end], nums[start]
            start += 1
            end -= 1

    reverse(0, n - 1)
    reverse(0, k - 1)
    reverse(k, n - 1)

# Take input
inp = list(map(int, input("Enter <length> <array elements> <k>: ").split()))
n = inp[0]
arr = inp[1:n+1]
k = inp[n+1]

rotate(arr, k)
print(*arr)
, language=Python, Problem_id=P003)
2025-04-15 14:36:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P003
2025-04-15 14:36:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 7,1,2,3,4,5,6,7,3 Output 5,6,7,1,2,3,4
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 7,1,2,3,4,5,6,7,3
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedEnter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range

2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Enter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range false
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 2,1,2,1 Output 2,1
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 2,1,2,1
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedEnter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range

2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Enter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range false
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,3,2 Output 2,3,1
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:36:46 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,3,2
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedEnter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range

2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Enter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range false
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 1,1,0 Output 1
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1,1,0
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedEnter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range

2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Enter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range false
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 4,1,2,3,4,4 Output 1,2,3,4
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 4,1,2,3,4,4
2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedEnter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range

2025-04-15 14:36:47 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Enter <length> <array elements> <k>: Traceback (most recent call last):
  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 19, in <module>
    k = inp[n+1]
        ~~~^^^^^
IndexError: list index out of range false
2025-04-15 14:36:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:36:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:36:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:04 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:04 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:04 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:04 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:37:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:37:04 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:04 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:04 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:04 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:37:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:37:13 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:13 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:13 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:13 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:37:13 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:37:13 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:13 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:13 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:13 [http-nio-8080-exec-9] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:37:13 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:37:28 [http-nio-8080-exec-1] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here
int  n  =  input("");
print(n), language=Java, Problem_id=P006)
2025-04-15 14:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P006
2025-04-15 14:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,0,2,1,1,0,0 Output 0,0,1,1,2,2
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:37:28 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,0,2,1,1,0,0
2025-04-15 14:37:29 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors

2025-04-15 14:37:29 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors false
2025-04-15 14:37:29 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,2,0,1,0 Output 0,1,2
2025-04-15 14:37:29 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:37:29 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,2,0,1,0
2025-04-15 14:37:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors

2025-04-15 14:37:30 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors false
2025-04-15 14:37:30 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,0,0,0,0 Output 0,0,0
2025-04-15 14:37:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:37:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,0,0,0,0
2025-04-15 14:37:31 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors

2025-04-15 14:37:31 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors false
2025-04-15 14:37:31 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,0,0 Output 0,1,2
2025-04-15 14:37:31 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:37:31 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,0,0
2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors

2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors false
2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,2,1,0,0,1,0 Output 0,0,1,1,2,2
2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,2,1,0,0,1,0
2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedMain.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors

2025-04-15 14:37:32 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  Main.java:2: error: unnamed classes are a preview feature and are disabled by default.
int  n  =  input("");
^
  (use --enable-preview to enable unnamed classes)
Main.java:3: error: class, interface, enum, or record expected
print(n)
^
2 errors false
2025-04-15 14:37:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:37:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:37:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:37:38 [http-nio-8080-exec-3] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here
int  n  =  input("");
print(n), language=Python, Problem_id=P006)
2025-04-15 14:37:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P006
2025-04-15 14:37:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,0,2,1,1,0,0 Output 0,0,1,1,2,2
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:38 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,0,2,1,1,0,0
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 3,2,0,1,0 Output 0,1,2
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,2,0,1,0
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 3,0,0,0,0 Output 0,0,0
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,0,0,0,0
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,0,0 Output 0,1,2
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,0,0
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,2,1,0,0,1,0 Output 0,0,1,1,2,2
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:39 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,2,1,0,0,1,0
2025-04-15 14:37:40 [http-nio-8080-exec-3] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax

2025-04-15 14:37:40 [http-nio-8080-exec-3] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 1
    // Your code here
    ^^
SyntaxError: invalid syntax false
2025-04-15 14:37:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:37:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:37:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:37:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  four@hotmail.com
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Rest_Controller.Submit_Route - four@hotmail.com
2025-04-15 14:37:43 [http-nio-8080-exec-4] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=
int  n  =  input("");
print(n), language=Python, Problem_id=P006)
2025-04-15 14:37:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P006
2025-04-15 14:37:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,0,2,1,1,0,0 Output 0,0,1,1,2,2
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,0,2,1,1,0,0
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax

2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax false
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Input 3,2,0,1,0 Output 0,1,2
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:43 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,2,0,1,0
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax

2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax false
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Input 3,0,0,0,0 Output 0,0,0
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,0,0,0,0
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax

2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax false
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Input 3,1,2,0,0 Output 0,1,2
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 3,1,2,0,0
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax

2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax false
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Input 6,2,2,1,0,0,1,0 Output 0,0,1,1,2,2
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Main.py Save  Succesfully  
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 6,2,2,1,0,0,1,0
2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax

2025-04-15 14:37:44 [http-nio-8080-exec-4] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  File "/home/ansh/Desktop/College assingmet/Fourth Semester/DBMS  cLG/leetcode/Main.py", line 2
    int  n  =  input("");
         ^
SyntaxError: invalid syntax false
2025-04-15 14:37:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 14:37:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 14:37:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:43:20 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:43:20 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:43:20 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:43:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:43:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:43:20 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:43:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:43:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:43:20 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:43:20 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiJlMGZmZWZhOS04MDE1LTRkNzEtODAzOC1hNWQxODg3NjViNGEiLCJpYXQiOjE3NDQ3MDc4ODAsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE1MDgwfQ.H4m1ARLWVR0KorTGw7_rEx9yqLRWYTqClWyRSsdaFbU
2025-04-15 14:43:20 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:43:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:43:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:43:20 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:43:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:43:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:54:52 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:54:52 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:54:52 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:55:01 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:55:01 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:55:01 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:55:36 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:55:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:55:37 [http-nio-8080-exec-3] INFO  c.l.leetcode.Service.JwtService - 1d7ac0f9-df47-43b1-9fdd-5b0bcc62145e
2025-04-15 14:55:37 [http-nio-8080-exec-3] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:37 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:37 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:37 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:55:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:55:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:55:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:55:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:55:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:37 [http-nio-8080-exec-4] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:55:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:55:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:55:43 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:43 [http-nio-8080-exec-10] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:55:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:55:43 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:55:43 [http-nio-8080-exec-2] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:55:43 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:55:44 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:44 [http-nio-8080-exec-3] INFO  c.l.l.Rest_Controller.LogoutRoute - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiIxZDdhYzBmOS1kZjQ3LTQzYjEtOWZkZC01YjBiY2M2MjE0NWUiLCJpYXQiOjE3NDQ3MDkxMzcsInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2MzM3fQ.rN543iYBdbC0oe8GzUtqEz4LPqH7zudNte7vEaIfUmU
2025-04-15 14:55:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:48 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=four@hotmail.com, password=gaurav)
2025-04-15 14:56:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:56:49 [http-nio-8080-exec-10] INFO  c.l.leetcode.Service.JwtService - 8f5a4b67-961f-45b8-a4a6-005f814daca0
2025-04-15 14:56:49 [http-nio-8080-exec-10] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:49 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:49 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:49 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:56:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-3] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:56:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:56:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:56:49 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:49 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:49 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:49 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:56:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:56:56 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:56 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:56:56 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:56:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:56:56 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:56:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:56:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:57:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:57:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI4ZjVhNGI2Ny05NjFmLTQ1YjgtYTRhNi0wMDVmODE0ZGFjYTAiLCJpYXQiOjE3NDQ3MDkyMDksInN1YiI6ImZvdXJAaG90bWFpbC5jb20iLCJ1c2VyX2lkIjoiNDdiNWZhMmEtNWY4My00MTZiLWIxZjYtN2ZkZDFhMzRhZTExIiwiZXhwIjoxNzQ0NzE2NDA5fQ.kTtxmmeAVPCCxBm2khgMpJ5oDD-5xnSpI5CFuDLtT2Q
2025-04-15 14:57:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - four@hotmail.com
2025-04-15 14:57:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:57:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:57:00 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: four@hotmail.com
2025-04-15 14:57:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:57:00 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:59:32 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:59:32 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:59:32 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:59:32 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 14:59:32 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 14:59:32 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 14:59:46 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.AuthService - User  Login  Attempt  LoginDto(email=tj@gmail.com, password=t@123)
2025-04-15 14:59:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        coder 
    set
        name=?,
        phone_number=?,
        email=?,
        jwt_id=?,
        password=?,
        role=? 
    where
        user_id=?
2025-04-15 14:59:47 [http-nio-8080-exec-4] INFO  c.l.leetcode.Service.JwtService - 71019631-d725-4e04-a516-4b59a907fac1
2025-04-15 14:59:47 [http-nio-8080-exec-4] WARN  c.l.leetcode.Service.AuthService - TOken eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:47 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:47 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:47 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:59:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-10] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:59:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:59:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:59:47 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:47 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:47 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:59:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:47 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:59:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    limit
        ?, ?
2025-04-15 14:59:47 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(p1_0.problem_id) 
    from
        problem p1_0
2025-04-15 14:59:52 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:52 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:52 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:59:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:52 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:59:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:59:52 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 14:59:52 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:52 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 14:59:52 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 14:59:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 14:59:52 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 14:59:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 14:59:52 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.problem_id,
        t1_0.testcase_id,
        t1_0.testcase_descrpiton,
        t1_0.testcase_input,
        t1_0.testcase_output 
    from
        test_cases t1_0 
    where
        t1_0.problem_id=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  eyJhbGciOiJIUzI1NiJ9.eyJqdGkiOiI3MTAxOTYzMS1kNzI1LTRlMDQtYTUxNi00YjU5YTkwN2ZhYzEiLCJpYXQiOjE3NDQ3MDkzODcsInN1YiI6InRqQGdtYWlsLmNvbSIsInVzZXJfaWQiOiI3Y2Q1ZmI3Ny0wMjU2LTQ3YTItOTdhMy03NjhiOWEyN2U1NzYiLCJleHAiOjE3NDQ3MTY1ODd9.1r1sdPfr8S8j74pZSUHdxcBBgKplxl4zHRzPhgDEL6U
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - tj@gmail.com
2025-04-15 15:05:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Authentication successful for user: tj@gmail.com
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - Authcation  Object  tj@gmail.com
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.Rest_Controller.Submit_Route - tj@gmail.com
2025-04-15 15:05:23 [http-nio-8080-exec-1] WARN  c.l.l.Rest_Controller.Submit_Route - SubmissionDto(Code=// Your code here
import  java.util.*;
public class  Main {
   public static String reverseString(String str) {
        StringBuilder reversed = new StringBuilder(str);
        return reversed.reverse().toString();
    }
  public static  void main(String args[]) {
    Scanner sc =  new Scanner(System.in);
    String  str =  sc.next();
    System.out.println(reverseString(str));

  }
}, language=Java, Problem_id=P011)
2025-04-15 15:05:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - The cast  submission object P011
2025-04-15 15:05:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        p1_0.problem_id,
        p1_0.problem_desc,
        p1_0.problem_title 
    from
        problem p1_0 
    where
        p1_0.problem_id=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tc1_0.testcase_id,
        tc1_0.problem_id,
        tc1_0.testcase_descrpiton,
        tc1_0.testcase_input,
        tc1_0.testcase_output 
    from
        test_cases tc1_0 
    where
        tc1_0.problem_id=?
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input OpenAI Output IAnepO
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 15:05:23 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd OpenAI
2025-04-15 15:05:26 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedIAnepO

2025-04-15 15:05:26 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  IAnepO true
2025-04-15 15:05:26 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input a Output a
2025-04-15 15:05:26 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 15:05:26 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd a
2025-04-15 15:05:28 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  reciveda

2025-04-15 15:05:28 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  a true
2025-04-15 15:05:28 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input 1234!@#$ Output $#@!4321
2025-04-15 15:05:28 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 15:05:28 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd 1234!@#$
2025-04-15 15:05:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recived$#@!4321

2025-04-15 15:05:30 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  $#@!4321 true
2025-04-15 15:05:30 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Input hello Output olleh
2025-04-15 15:05:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Main.java Save  Succesfully  
2025-04-15 15:05:30 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - Inout  Recivedd hello
2025-04-15 15:05:33 [http-nio-8080-exec-1] INFO  c.l.l.Service.CoderExecutorService - FInal  Output  recivedolleh

2025-04-15 15:05:33 [http-nio-8080-exec-1] INFO  c.l.l.S.TestCaseExecutorService - Ouput  Recived  olleh true
2025-04-15 15:05:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        s1_0.submission_id,
        s1_0.problem_id,
        s1_0.results,
        s1_0.code,
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role,
        s1_0.language,
        s1_0.local_date 
    from
        submission s1_0 
    left join
        coder c1_0 
            on c1_0.user_id=s1_0.coder_user_id 
    where
        s1_0.submission_id=?
2025-04-15 15:05:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        submission
        (problem_id, results, code, coder_user_id, language, local_date, submission_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-04-15 15:05:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.user_id,
        c1_0.name,
        c1_0.phone_number,
        c1_0.email,
        c1_0.jwt_id,
        c1_0.password,
        c1_0.role 
    from
        coder c1_0 
    where
        c1_0.email=?
2025-04-15 15:14:07 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 15:14:07 [http-nio-8080-exec-6] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 15:14:07 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 15:14:07 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 15:14:07 [http-nio-8080-exec-5] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 15:14:07 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 15:14:17 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 15:14:17 [http-nio-8080-exec-7] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 15:14:17 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 15:14:17 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - Bearer null
2025-04-15 15:14:17 [http-nio-8080-exec-8] INFO  c.l.l.F.JwtFilter$$SpringCGLIB$$0 - The  Token   is  null
2025-04-15 15:14:17 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.MalformedJwtException: Invalid compact JWT string: Compact JWSs must contain exactly 2 period characters, and compact JWEs must contain exactly 4.  Found: 0
	at io.jsonwebtoken.impl.JwtTokenizer.tokenize(JwtTokenizer.java:102)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:370)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:362)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:94)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:36)
	at io.jsonwebtoken.impl.io.AbstractParser.parse(AbstractParser.java:29)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseSignedClaims(DefaultJwtParser.java:821)
	at com.leetcode.leetcode.Service.JwtService.getUserId(JwtService.java:70)
	at com.leetcode.leetcode.Filter.JwtFilter.doFilterInternal(JwtFilter.java:53)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-15 15:18:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-15 15:18:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-15 15:18:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-15 15:18:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-15 15:18:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
